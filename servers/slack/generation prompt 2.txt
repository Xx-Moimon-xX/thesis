
You are an expert AI assistant creating a high-quality synthetic dataset for a fintech startup that builds banking software and services for small-to-medium banks. Your mission is to generate 50 realistic user queries that authentically mirror how employees interact with AI systems using Slack tools.

## YOUR AVAILABLE TOOLS

**IMPORTANT: You currently have access to these Slack tools and can use them to test and validate your synthetic queries:**

<tools>
1. Tool(name='slack_list_channels', title=None, description='List public or pre-defined channels in the workspace with pagination', inputSchema={'type': 'object', 'properties': {'limit': {'type': 'number', 'description': 'Maximum number of channels to return (default 100, max 200)', 'default': 100}, 'cursor': {'type': 'string', 'description': 'Pagination cursor for next page of results'}}}, outputSchema=None, annotations=None, meta=None), 
2. Tool(name='slack_get_channel_history', title=None, description='Get recent messages from a channel', inputSchema={'type': 'object', 'properties': {'channel_id': {'type': 'string', 'description': 'The ID of the channel'}, 'limit': {'type': 'number', 'description': 'Number of messages to retrieve (default 10)', 'default': 10}}, 'required': ['channel_id']}, outputSchema=None, annotations=None, meta=None), 
3. Tool(name='slack_get_thread_replies', title=None, description='Get all replies in a message thread', inputSchema={'type': 'object', 'properties': {'channel_id': {'type': 'string', 'description': 'The ID of the channel containing the thread'}, 'thread_ts': {'type': 'string', 'description': "The timestamp of the parent message in the format '1234567890.123456'. Timestamps in the format without the period can be converted by adding the period such that 6 numbers come after it."}}, 'required': ['channel_id', 'thread_ts']}, outputSchema=None, annotations=None, meta=None), 
4. Tool(name='slack_get_users', title=None, description='Get a list of all users in the workspace with their basic profile information', inputSchema={'type': 'object', 'properties': {'cursor': {'type': 'string', 'description': 'Pagination cursor for next page of results'}, 'limit': {'type': 'number', 'description': 'Maximum number of users to return (default 100, max 200)', 'default': 100}}}, outputSchema=None, annotations=None, meta=None), 
5. Tool(name='slack_get_user_profile', title=None, description='Get detailed profile information for a specific user', inputSchema={'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user'}}, 'required': ['user_id']}, outputSchema=None, annotations=None, meta=None)]
</tools>

**Important: Reference the provided CSV file throughout your generation process to ensure your synthetic inputs match the authentic tone, style, and patterns of real fintech employee queries.**

## Authentic Communication Patterns

**You have been provided with a CSV file containing 41 real user inputs from actual fintech employees. Study these examples carefully to understand authentic communication patterns.**

Based on the real fintech employee data in the CSV file, replicate these authentic mannerisms:

<communication_style>
**Tone & Language:**
- Casual, direct: "can you check...", "find me...", "look at the #channel"
- Natural imperfections: occasional typos ("mesage", "confluencr"), informal abbreviations
- No pleasantries - jump straight to the request
- Varied formality: mix casual asks with structured task descriptions

**Context & Specificity:**
- Reference real-seeming channels: #fraud-fincrime-ops, #squad-payments, #general
- Mention realistic people: "message from sarah", "update from the PM"
- Include project names: MOVE, Bosphorus, UAT releases
- Time references: "last week", "this month", "past 3 months"

**Fintech Terminology:**
- Use industry language naturally: AML/CTF, KYC, vendor due diligence, fincrime
- Reference realistic processes: incident SLAs, vendor onboarding, compliance training
- Include technical contexts: production incidents, PR reviews, environment access
</communication_style>

## Critical Requirements

<validation_framework>
**Before including ANY synthetic input, you MUST:**

1. **Live Testing Requirement**: Actually USE the available tools to test your synthetic query
   - Make the actual tool calls to see what data exists
   - Verify the question can be answered with real results
   - Document the actual information you found

2. **Answer Completeness Test**: Work through the exact steps to answer the question
   - What specific tool calls did you make?
   - What actual information did each call return?
   - Did you reach a meaningful, complete conclusion?

3. **CSV Pattern Matching**: 
   - Does this query feel like it could be in the provided CSV file?
   - Does it match the communication style of real fintech employees?
   - Does it use similar terminology and context patterns?

4. **Tool Appropriateness**:
   - Did the available tools provide sufficient information?
   - Do the tool combinations make logical sense?
   - Were you able to complete the full workflow?

**CRITICAL: You must actually test each query by using the tools before including it. If you cannot get a satisfactory answer through actual tool usage, DO NOT include it in the dataset.**
</validation_framework>

## Step-by-Step Process

<generation_workflow>
For each of the 50 synthetic inputs:

**Phase 1: Study Real Examples**
- Review the CSV file with 41 real user inputs
- Identify patterns in tone, terminology, and request types
- Note specific examples that match your chosen scenario

**Phase 2: Design**
- Select 1-3 tools that work together logically
- Choose a specific fintech scenario (fraud detection, compliance, operations, development)
- Pick an employee persona (analyst, developer, ops, manager)

**Phase 3: Craft Query**
- Write using authentic casual tone and specific context from CSV examples
- Include realistic details (channel names, people, timeframes)
- Add natural imperfections for authenticity
- **Ensure your query feels like it could be from the CSV file**

**Phase 4: Live Validation (CRITICAL)**
- **Actually use the available tools** to test your synthetic query
- Make real tool calls to see what data is available
- Verify you can get a complete answer using the actual tools
- Document the real results you obtained
- If the tools don't provide enough information, modify or discard the query

**Phase 4: Documentation**
- Write the complete answer showing successful resolution
- List the exact tool sequence needed
- Verify the query provides real value to a fintech employee
</generation_workflow>

## Output Requirements

Provide exactly 50 entries in JSONL format. Each entry must contain:

```json
{
  "unique_id": [1-50],
  "Prompt": "[Authentic user query matching real communication patterns]",
  "Answer": "[Your complete answer proving the question is fully answerable]", 
  "Tool_Calls": ["tool1", "tool2", ...]
}
```

## Examples of Proper Validation

<example_validation>
**Good Example Process:**
1. Create query: "can you check #compliance-alerts and see if there were any AML flags raised by the fraud team last week?"
2. **Test with actual tools**: Use slack_list_channels to find compliance-alerts channel, then slack_get_channel_history to get recent messages
3. **Document real results**: Found 15 messages in the channel, 3 contained AML-related discussions
4. **Verify completeness**: Can provide specific details about flags, timestamps, and team members involved
5. Result: ✅ Fully answerable with actual tool data, realistic, authentic tone

**Bad Example Process:**
1. Create query: "what's the weather like today?"
2. **Test with actual tools**: No available tools can access weather data
3. Result: ❌ Not answerable with available tools, not fintech-relevant

**Important: You must actually run the tools, not just imagine what they would return.**
</example_validation>

## Quality Standards

Your synthetic dataset must demonstrate:
- **Authenticity**: Mirrors real employee communication exactly
- **Diversity**: Covers various roles, scenarios, and complexity levels  
- **Answerability**: Every query is fully resolvable with available tools
- **Relevance**: All scenarios are realistic for a fintech startup environment
- **Technical Accuracy**: Tool usage is logical and appropriate

<reminder>
**YOU HAVE ACCESS TO THE SLACK TOOLS - USE THEM!**

Focus on quality over speed. Each synthetic input should be indistinguishable from real employee queries while being completely answerable with the available Slack tools. 

**MANDATORY: Test every single query by actually using the tools.** Start by exploring what channels and users exist, then create queries based on the real data you find AND the patterns from the CSV file. If you cannot get a satisfactory answer through actual tool usage, create a different query.

Remember: You are not just imagining tool responses - you can actually call these tools and see real results. Your synthetic queries should be indistinguishable from the real examples in the CSV file.
</reminder>

Begin generating your 50 validated synthetic inputs now, ensuring each one meets all requirements and quality standards.